#!/bin/sh

# Partially based on gdm3.config, Â© 2000-2001 Branden Robinson.
# Licensed under the GNU General Public License, version 2.  See the file
# /usr/share/common-licenses/GPL-2 or <http://www.gnu.org/copyleft/gpl.txt>.


set -e

. /usr/share/debconf/confmodule

THIS_PACKAGE=nodm
DEFAULT_DISPLAY_MANAGER_FILE=/etc/X11/default-display-manager

# set default display manager

db_get shared/default-x-display-manager
OLD_DEFAULT="$RET"

db_metaget shared/default-x-display-manager owners
OWNERS="$RET"
db_metaget shared/default-x-display-manager choices
CHOICES="$RET"

if [ "$OWNERS" != "$CHOICES" ]; then
  db_subst shared/default-x-display-manager choices $OWNERS
  db_fset shared/default-x-display-manager seen false
fi

db_input high shared/default-x-display-manager || true
db_go

# using this display manager?
db_get shared/default-x-display-manager
CURRENT_DEFAULT="$RET"
# set a flag to indicate to postinst that we need to update from debconf
if [ "$OLD_DEFAULT" != "$CURRENT_DEFAULT" ]; then
  DEFAULT_DISPLAY_MANAGER_DIR=$(dirname $DEFAULT_DISPLAY_MANAGER_FILE)
  test -e $DEFAULT_DISPLAY_MANAGER_DIR || mkdir -p $DEFAULT_DISPLAY_MANAGER_DIR
  touch $DEFAULT_DISPLAY_MANAGER_FILE.debconf-update
fi

if [ -s /etc/default/nodm ] ; then
	. /etc/default/nodm

	if [ -n "$NODM_ENABLED" ] ; then
		db_set nodm/enabled "$NODM_ENABLED"
	fi
	if [ -n "$NODM_USER" ] ; then
		db_set nodm/user "$NODM_USER"
	fi

	if [ -n "$2" ] && dpkg --compare-versions "$2" lt "0.10"
	then
		# After 0.10 nodm/xinit is not needed anymore
		# don't fail if it was unregistered before
		db_unregister nodm/xinit || true
	fi

	if [ -n "$2" ] && dpkg --compare-versions "$2" lt "0.5"
	then
		# If I'm coming from <0.5, remove vtN from NODM_X_OPTIONS and
		# set first_vt to N
		if [ -n "$NODM_X_OPTIONS" ] ; then
			# Try to extract vtN from NODM_X_OPTIONS
			VTNUM=`echo "$NODM_X_OPTIONS" | sed -re 's/^.*\<vt([0-9]+)\>.*$/\1/'`
			if [ "$VTNUM" = "$NODM_X_OPTIONS" ]
			then
				VTNUM=
			else
				# If it found vtN, strip it away from NODM_X_OPTIONS
				NODM_X_OPTIONS=`echo "$NODM_X_OPTIONS" | sed -r -e 's/[[:blank:]]*\<vt([0-9]+)\>[[:blank:]]/ /' -e 's/^[[:blank:]]*//' -e 's/[[:blank:]]*$//'`
			fi
			db_set nodm/x_options "$NODM_X_OPTIONS"
		fi
		if [ -n "$NODM_FIRST_VT" ] ; then
			db_set nodm/first_vt "$NODM_FIRST_VT"
		elif [ -n "$VTNUM" ]; then
			# If VTNUM was not set but we found it in NODM_X_OPTIONS, set it here
			db_set nodm/first_vt "$VTNUM"
		fi
	else
		if [ -n "$NODM_FIRST_VT" ] ; then
			db_set nodm/first_vt "$NODM_FIRST_VT"
		fi
		if [ -n "$NODM_X_OPTIONS" ] ; then
			db_set nodm/x_options "$NODM_X_OPTIONS"
		fi
	fi
	if [ -n "$NODM_MIN_SESSION_TIME" ]; then
		db_set nodm/min_session_time "$NODM_MIN_SESSION_TIME"
	fi
	if [ -n "$NODM_XSESSION" ]; then
		db_set nodm/xsession "$NODM_XSESSION"
	fi
	if [ -n "$NODM_X_TIMEOUT" ]; then
		db_set nodm/x_timeout "$NODM_X_TIMEOUT"
	fi
fi

db_input high nodm/enabled || true
db_go

db_get nodm/enabled
START="$RET"

if [ "x$START" = "xtrue" ] ; then
	db_input medium nodm/user || true
	db_go

	db_input low nodm/first_vt || true
	db_go

	db_input low nodm/x_options || true
	db_go

	db_input low nodm/min_session_time || true
	db_go

	db_input low nodm/xsession || true
	db_go

	db_input low nodm/x_timeout || true
	db_go
fi

